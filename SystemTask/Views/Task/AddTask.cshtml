@model SystemTask.Models.Task

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>&nbsp;</h4>
        <p></p>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
       

        <div class="form-group">                  
            @Html.LabelFor(model => model.nameTask,"Task Name :", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nameTask, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nameTask, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, "Description:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdStatus, "Status:",htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                @{
                    List<SelectListItem> listItems = new List<SelectListItem>();
                    listItems.Add(new SelectListItem
                    {
                        Text = "Active",
                        Value = "1",
                        Selected= true
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "Stopped",
                        Value = "2"                        
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "Completed",
                        Value = "3"
                    });
                }

                @Html.DropDownListFor(model => model.IdStatus, listItems, "Active", new { @class = "form-control", })
            </div>
            </div>
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create Task" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List of Task", "GetTask")
</div>
